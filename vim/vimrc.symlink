set nocompatible  " We don't want vi compatibility.
filetype on
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle
" required!
Plugin 'VundleVim/Vundle.vim'

" Color schemes
Plugin 'flazz/vim-colorschemes'

" All the Tim Pope stuff
Plugin 'tpope/vim-fugitive.git'
Plugin 'tpope/vim-surround.git'
Plugin 'tpope/vim-markdown.git'
Plugin 'tpope/vim-vinegar.git'
Plugin 'tpope/vim-obsession.git'

" For Tabs/Comments/Searching
Plugin 'gcmt/taboo.vim.git'
Plugin 'scrooloose/nerdcommenter.git'
Plugin 'mileszs/ack.vim.git'
Plugin 'kien/ctrlp.vim.git'

" Syntax
Plugin 'jelera/vim-javascript-syntax'

call vundle#end()

" look up filetypes
filetype plugin indent on

set t_Co=256
syntax enable
set background=dark
colorscheme Tomorrow-Night

" Send more characters for redraws
set ttyfast
set lazyredraw
set synmaxcol=128
syntax sync minlines=256

" Store swap files somwhere else
set backupdir=/tmp directory=/tmp undodir=/tmp

" Set the leader to space
let mapleader=" "

" Tab Movement
nnoremap tt :TabooOpen<Space>
nnoremap tr :TabooRename<Space>
nnoremap th :tabfirst<CR>
nnoremap tj :tabprev<CR>
nnoremap tk :tabnext<CR>
nnoremap tl :tablast<CR>
nnoremap tn :tabnext<CR>

" Save tabs in session
set sessionoptions+=tabpages,globals

" Buffer Movement
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Buffer Resize
nnoremap <Right> :vertical resize -5<CR>
nnoremap <Up> :res-5<CR>
nnoremap <Down> :res+5<CR>
nnoremap <Left> :vertical resize +5<CR>

nnoremap <Leader>/ :noh<CR> " Remove Highlighting
nnoremap <Leader>q :q<CR> " Fast Quit
nnoremap <leader><leader> :w <CR> " Fast Write
nnoremap <leader>s :call <SID>fastSource()<CR><CR> " Fast Source


nnoremap <Leader>rt :!ctags --extra=+f -R *<CR><CR>
nnoremap <Leader>m :make<CR><CR><CR>:cw<CR>
nnoremap <Leader>v :vertical resize +10<CR>
nnoremap <Leader>r :resize +10<CR>

if !exists('*<SID>fastSource')
  func! <SID>fastSource()
    silent :source ~/.vimrc
    silent :filetype detect
  endfunc
endif

set cf  " Enable error files & error jumping.
set clipboard+=unnamed  " Yanks go on clipboard instead.
set history=256  " Number of things to remember in history.
set autowrite  " Writes on make/shell commands
set ruler  " Ruler on
set nu  " Line numbers on
set nowrap  " Line wrapping off
set timeoutlen=250  " Time to wait after ESC (default causes an annoying delay)
set encoding=utf-8

" Formatting
set ts=2  " Tabs are 2 spaces
set bs=2  " Backspace over everything in insert mode
set shiftwidth=2  " Tabs under smart indent
set nocp incsearch
set hlsearch
set cinoptions=:0,p0,t0
set cinwords=if,else,while,do,for,switch,case
set formatoptions=tcqr
set cindent
set autoindent
set smarttab
set expandtab


"   " Visual
set showmatch  " Show matching brackets.
set mat=5  " Bracket blinking.
set list
set lcs=tab:>.,trail:.,extends:#,nbsp:.
set novisualbell  " No blinking .
set noerrorbells  " No noise.
set laststatus=2  " Always show status line.

set pastetoggle=<F2> 

"   "  Keep Ecs Snappy
set notimeout
set ttimeout
set ttimeoutlen=0

au Bufenter *.hs compiler ghc
let g:haddock_browser = "w3m"

:set tags+=ftags
nmap ,f :FufTag<CR>

if has('gui_running')
 set guioptions -=m
 set guioptions -=T
 set guioptions -=r
 set guioptions -=L
 set guifont=Monaco:h12
 set transparency=5
endif

au BufRead,BufNewFile *.jade setfiletype jade
au BufRead,BufNewFile *.less setfiletype less
au BufRead,BufNewFile *.ng setfiletype mustache

"Ctrl P
set wildignore +=*/.git/*
set wildignore +=*.ipc
set wildignore +=*.swp
let g:ctrlp_custom_ignore = {
  \ 'dir':  'vendor\/\|public/javascripts-built\/\|playframework\/\|tmp\/\|node_modules\/\|stylesheets\/'
  \ }
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:20'

" Open netrw if editing a directory
autocmd vimenter * if !argc() | :e. | endif

"Diff changes in git
nnoremap <leader>df :!git difftool <CR><CR>

" Set the General UI Colors/Look
set fillchars+=vert:\ 
hi Normal ctermbg=NONE
hi DiffAdd ctermbg=8
hi DiffDelete ctermbg=8 ctermfg=1
hi DiffChange ctermbg=8 cterm=none
hi DiffText ctermbg=12 ctermfg=0 cterm=none
hi LineNr ctermfg=8 ctermbg=236
hi VertSlplit ctermfg=8 ctermbg=236



augroup vimrc_autocmd
  autocmd!
  " No more .swp file warnings!
  autocmd  SwapExists * :let v:swapchoice = 'e'
augroup END

"I never really care about using readonly
set noreadonly

 if !exists("g:MySmartQuitDefined")
  func! MySmartQuit()
    if &diff || !len(bufname('%'))
      xa!
    else
      wq!
    endif
  endfunc
  echo
endif
let g:MySmartQuitDefined = 1
nnoremap <leader>q :call MySmartQuit()<CR>

if executable('ag')
  " Use Ag over Grep or Ack
  set grepprg=ag\ --nogroup\ --nocolor
  let g:ackprg = 'ag --vimgrep'

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif
cnoreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>

" Splits / File Explorer
nnoremap <Leader>j  :set splitbelow<CR> :sp<CR> :exec ":e ".expand("%:p:h")<CR>
nnoremap <Leader>k  :set splitbelow &<CR> :sp<CR> :exec ":e ".expand("%:p:h")<CR>
nnoremap <Leader>l  :set splitright<CR> :vsp<CR> :exec ":e ".expand("%:p:h")<CR>
nnoremap <Leader>h  :set splitright&<CR> :vsp<CR> :exec ":e ".expand("%:p:h")<CR>

nnoremap <Leader>e <C-^> "Explore Mode
nnoremap <Leader>= <C-w>= "Resize all windows

inoremap <C-j> <ESC>
